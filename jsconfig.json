{
  "compilerOptions": {
    // -------------------
    // Section 1: Projects
    // -------------------
    "incremental": false, // Save .tsbuildinfo files to allow for incremental compilation of projects.

    // -----------------------------------
    // Section 2: Language and Environment
    // -----------------------------------
    "target": "ESNext",
    "jsx": "react-jsx",
    "lib": ["ES2022", "DOM"], // adding the "DOM" library helps vs-code to recognize the window & document objects.

    // ------------------
    // Section 3: Modules
    // ------------------
    "module": "ESNext",
    "moduleResolution": "Node",

    "resolveJsonModule": true,
    "baseUrl": "./",
    "typeRoots": ["node_modules/@types", "@luckylove-pkg/types"],
    "paths": {
      "/*": ["src/public/*"]
    },

    // -----------------------------
    // Section 4: JavaScript Support
    // -----------------------------
    "checkJs": true, // without it? this config file would not apply to js/jsx files.
    "maxNodeModuleJsDepth": 0, // Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'.

    // ---------------
    // Section 5: Emit
    // ---------------
    "importsNotUsedAsValues": "error",
    "sourceMap": true, // default value is false
    // "outDir": "./dist", // no need to have this! all the microservices are being used just as they are, and the only thing being bundled is the app-frontend, which gets bundled using vite, which already has an outDir set in its config file.

    // ------------------------------
    // Section 6: Interop Constraints
    // ------------------------------
    "isolatedModules": true, // <--- Setting the isolatedModules flag tells TypeScript to warn you if you write certain code that canâ€™t be correctly interpreted by a single-file transpilation process.
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    // "preserveSymlinks": true, // <--- Solved being redirected to node_modules/.pnpm symlink all the time! Disable resolving symlinks to their realpath. This correlates to the same flag in node. But on the other-hand, I wasn't able to import Page as type from playwright in jsdoc.

    // ------------------------
    // Section 7: Type Checking
    // ------------------------
    "noImplicitOverride": true, // If you use inheritance, and you provide an override function, you must specify that it is an override function.

    // -----------------------
    // Section 8: Completeness
    // -----------------------
    "skipLibCheck": true,

    "ignoreDeprecations": "5.0"
  },
  "compileOnSave": true,
  "exclude": ["node_modules", "**/node_modules/*", "<node_internals>/**", "bin/**"],
  "include": ["**/*/*.ts", "**/*.d.ts", "**/*.js", "**/*.jsx", "**/*.cjs", "*.ts", "*.d.ts", "*.js", "*.jsx", "*.cjs"]
}
